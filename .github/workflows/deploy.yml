name: Deploy GitHub Genie

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: github-genie-a2a
  REGION: us-central1

jobs:
  deploy-backend:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    outputs:
      service_url: ${{ steps.get-url.outputs.service_url }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Build and Push Container
      run: |-
        docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/github-genie-a2a/$SERVICE:$GITHUB_SHA .
        docker push us-central1-docker.pkg.dev/$PROJECT_ID/github-genie-a2a/$SERVICE:$GITHUB_SHA

    - name: Deploy to Cloud Run
      id: deploy
      run: |-
        gcloud run deploy $SERVICE \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/github-genie-a2a/$SERVICE:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8000 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

    - name: Get Cloud Run URL
      id: get-url
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE --region=$REGION --format="value(status.url)")
        echo "Backend deployed to: $SERVICE_URL"
        echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT

  deploy-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Prepare frontend for deployment
      run: |
        mkdir -p frontend-build
        cp -r examples/frontend/* frontend-build/
        
        # Generate config.js with actual Cloud Run URL
        cat > frontend-build/config.js << EOF
        // Configuration for GitHub Genie frontend
        window.GITHUB_GENIE_SERVER_URL = '${{ needs.deploy-backend.outputs.service_url }}';
        EOF
        
        echo "Generated config.js:"
        cat frontend-build/config.js

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./frontend-build

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Show deployment URLs
      run: |
        echo "Backend URL: ${{ needs.deploy-backend.outputs.service_url }}"
        echo "Frontend URL: ${{ steps.deployment.outputs.page_url }}"
