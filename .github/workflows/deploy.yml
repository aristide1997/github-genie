name: Deploy GitHub Genie

on:
  push:
  pull_request:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: github-genie-a2a
  REGION: us-central1

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Build and Push Container
      run: |-
        docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/github-genie-a2a/$SERVICE:$GITHUB_SHA .
        docker push us-central1-docker.pkg.dev/$PROJECT_ID/github-genie-a2a/$SERVICE:$GITHUB_SHA

    - name: Deploy to Cloud Run
      id: deploy
      run: |-
        gcloud run deploy $SERVICE \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/github-genie-a2a/$SERVICE:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8000 \
          --memory 2Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

    - name: Get Cloud Run URL and save to artifact
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE --region=$REGION --format="value(status.url)")
        echo "Backend deployed to: $SERVICE_URL"
        mkdir -p deployment-info
        echo "$SERVICE_URL" > deployment-info/service_url.txt
        
    - name: Upload deployment info
      uses: actions/upload-artifact@v4
      with:
        name: deployment-info
        path: deployment-info/
        retention-days: 1

  deploy-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: examples/frontend/package-lock.json

    - name: Download deployment info
      uses: actions/download-artifact@v4
      with:
        name: deployment-info
        path: deployment-info/

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Install React dependencies
      run: |
        cd examples/frontend
        npm ci

    - name: Build React app
      run: |
        cd examples/frontend
        npm run build

    - name: Prepare frontend for deployment
      run: |
        mkdir -p frontend-build
        cp -r examples/frontend/dist/* frontend-build/
        
        # Read the service URL from the artifact
        SERVICE_URL=$(cat deployment-info/service_url.txt)
        echo "Using backend URL: $SERVICE_URL"
        
        # Generate config.js with actual Cloud Run URL (override the default one)
        cat > frontend-build/config.js << EOF
        // Configuration for GitHub Genie frontend
        window.GITHUB_GENIE_SERVER_URL = '$SERVICE_URL';
        EOF
        
        echo "Generated config.js:"
        cat frontend-build/config.js

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./frontend-build

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Show deployment URLs
      run: |
        SERVICE_URL=$(cat deployment-info/service_url.txt)
        echo "Backend URL: $SERVICE_URL"
        echo "Frontend URL: ${{ steps.deployment.outputs.page_url }}"
